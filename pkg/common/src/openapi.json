{
  "openapi": "3.0.0",
  "info": {
    "title": "Scout API",
    "description": "API for managing scout records.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/v1/scouts": {
      "get": {
        "summary": "Get paginated scout records",
        "operationId": "getScoutsV1",
        "x-kmcssz": {
          "httpPath": "/api/v1/scouts"
        },
        "parameters": [
          {
            "in": "query",
            "name": "sortFieldName",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1024,
              "default": "city"
            },
            "required": false,
            "description": "The name of the column in the SQL database table to sort the results based on."
          },
          {
            "in": "query",
            "name": "sortDirection",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc"
            },
            "required": false,
            "description": "The direction in which the retrieved data should be sorted. Defaults to ascending."
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "maxItems": 99999
            },
            "required": true,
            "description": "Page number for pagination (default is 1)"
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 5,
              "maximum": 500
            },
            "required": true,
            "description": "Number of records per page (default is 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["data", "sorting", "pagination"],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Scout"
                      }
                    },
                    "sorting": {
                      "type": "object",
                      "properties": {
                        "sortDirection": {
                          "type": "string",
                          "enum": ["asc", "desc"]
                        },
                        "sortFieldName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1024
                        }
                      },
                      "required": ["sortDirection", "sortFieldName"]
                    },
                    "pagination": {
                      "type": "object",
                      "required": [
                        "totalRecords",
                        "totalPages",
                        "currentPage",
                        "pageSize"
                      ],
                      "properties": {
                        "totalRecords": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "currentPage": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new scout",
        "operationId": "createScout",
        "x-kmcssz": {
          "httpPath": "/api/v1/scouts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Scout"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Scout created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scout"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RankLongName": {
        "type": "string",
        "enum": [
          "KOV - Kiscserkész Őrs Vezető",
          "OV - Őrs Vezető",
          "KST - Kiscserkész Segéd Tiszt",
          "ST - Segéd Tiszt",
          "T - Tiszt"
        ],
        "x-enum-varnames": ["KOV", "OV", "KST", "ST", "T"],
        "x-enum-descriptions": [
          "KOV - Kiscserkész Őrs Vezető",
          "OV - Őrs Vezető",
          "KST - Kiscserkész Segéd Tiszt",
          "ST - Segéd Tiszt",
          "T - Tiszt"
        ],
        "maxLength": 50,
        "example": "T - Tiszt"
      },
      "Scout": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 36,
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "first_name": {
            "type": "string",
            "maxLength": 50,
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "maxLength": 50,
            "example": "Doe"
          },
          "birth_year": {
            "type": "integer",
            "example": 2005
          },
          "email_1": {
            "type": "string",
            "maxLength": 100,
            "example": "john.doe@example.com"
          },
          "phone_number_1": {
            "type": "string",
            "maxLength": 15,
            "example": "555-1234"
          },
          "troop_name": {
            "type": "string",
            "maxLength": 100,
            "example": "Eagle Scouts"
          },
          "troop_number": {
            "type": "integer",
            "example": 123
          },
          "troop_url": {
            "type": "string",
            "maxLength": 200,
            "example": "http://example.com"
          },
          "country": {
            "type": "string",
            "maxLength": 56,
            "example": "USA"
          },
          "state": {
            "type": "string",
            "maxLength": 50,
            "example": "California"
          },
          "city": {
            "type": "string",
            "maxLength": 100,
            "example": "Kiskunfélegyháza"
          },
          "rank": {
            "type": "string",
            "enum": ["KOV", "OV", "KST", "ST", "T"],
            "x-enum-varnames": ["KOV", "OV", "KST", "ST", "T"],
            "x-enum-descriptions": [
              "KOV - Kiscserkész Őrs Vezető",
              "OV - Őrs Vezető",
              "KST - Kiscserkész Segéd Tiszt",
              "ST - Segéd Tiszt",
              "T - Tiszt"
            ],
            "maxLength": 50,
            "example": "T - Tiszt"
          },
          "been_to_jubilee": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_set_fire": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_carve_wood": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_train_others": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_make_sausage": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_lead_campfire": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_first_aid": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          },
          "can_cook": {
            "type": "string",
            "enum": ["TRUE", "FALSE"],
            "example": "TRUE"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "birth_year",
          "email_1",
          "phone_number_1",
          "troop_name",
          "troop_number",
          "troop_url",
          "country",
          "state",
          "city",
          "rank",
          "been_to_jubilee",
          "can_set_fire",
          "can_carve_wood",
          "can_train_others",
          "can_make_sausage",
          "can_lead_campfire",
          "can_first_aid",
          "can_cook"
        ]
      }
    }
  }
}
